-- 1. Retrieve all orders placed between '2023-01-01' and '2023-03-31'.
SELECT * 
FROM orders 
WHERE order_date BETWEEN '2023-01-01' AND '2023-03-31';

-- 2. Find the average purchase amount for each month of the year 2023.
SELECT DATE_TRUNC('month', order_date) AS month, AVG(total_amount) AS avg_purchase
FROM orders
WHERE order_date BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY month
ORDER BY month;

-- 3. List all products with a price higher than the average product price.
SELECT * 
FROM products 
WHERE price > (SELECT AVG(price) FROM products);

-- 4. Identify customers who have placed more than 5 orders.
SELECT customer_id, COUNT(order_id) AS total_orders
FROM orders
GROUP BY customer_id
HAVING COUNT(order_id) > 5;

-- 5. Show the total revenue generated by each product category.
SELECT c.category_id, c.category_name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id
JOIN categories c ON p.category_id = c.category_id
GROUP BY c.category_id, c.category_name
ORDER BY total_revenue DESC;

-- 6. Retrieve the top 5 selling products.
SELECT p.product_id, p.product_name, SUM(od.quantity) AS total_sold
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_id, p.product_name
ORDER BY total_sold DESC
LIMIT 5;

-- 7. List all orders with their corresponding order details (products and quantities).
SELECT o.order_id, o.order_date, c.customer_name, p.product_name, od.quantity
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id
ORDER BY o.order_id;

-- 8. Find customers who have not placed any orders yet.
SELECT c.customer_id, c.customer_name
FROM customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
WHERE o.order_id IS NULL;

-- 9. Update the price of a specific product by increasing it by 10%.
UPDATE products
SET price = price * 1.10
WHERE product_id = 101;  -- Replace 101 with the actual product ID

-- 10. Remove all orders that have been canceled.
DELETE FROM orders
WHERE status = 'Canceled';
